In new applications you should absolutely use the hook-api, 
^(aka useSelector() and useDispatch())

But knowing how to use 
connect is useful when maintaining older projects using redux.

----------------------------------------------------------
Using the Connect function:

1. import { connect } from 'react-redux'

1b. const Notes = () => {...} //A react component

2. const ConnectedNotes = connect(mapStateToProps, mapDispatchToProps)(Notes)
^more on parameters below.

3. export default ConnectedNotes
-------------------------------------
mapStateToProps:

^the connect() function accepts a function in the 1st parameter
that can define the props of the connected component (Notes) to the state
of the redux store:

^ex inside Notes file: 

//after defining Notes component:

const mapStateToProps = (state) => {
  return {
    notes: state.notes, 
    filter: state.filter,
  }
} //assuming redux store has notes and filter properties

const ConnectedNotes = connect(mapStateToProps)(Notes)

export default ConnectedNotes

^ now the component can access the notes state through props.notes and
filter thru props.filter.

If a component doesn't need access to state, you can pass null as 1st
argument to connect. 
----------------------------------

mapDispatchToProps:

The second parameter of connect funtion is used to define a 
group of action creator functions passed to the connected component
as props. 

^ex (adding to above step):

const mapDispatchToProps = {
  actionCreatorFunctionFoo,
  actionCreatorFunctionBar,
 }

const ConnectedNotes = connect(mapStateToProps, mapDispatchToProps)(Notes)


^remember, action creator functions are what you call dispatch() on to
change the state. functions passed tomapDispatchToProps object must be
functions that return Redux actions. 

The functions can be accessed through props.functionName()

So instead of:
 dispatch(actionCreator(foo)) 

the old redux way using connect is:

 props.actionCreator(foo) (after passing mapDispatchToProps)

-------------------

If dispatched actions need to reference component props:

const mapDispatchToProps = dispatch => {
  return {
  createNote: value => {
    dispatch(createNote(value))
   },
  }
}

^The return value of the mDTP are the functions that are passed as
props. 

(The explanation on how this was different wasnt clear, refer to Dan
Abramov egghead.io on redux course if need arises)



