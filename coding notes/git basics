Basic Syntax is Program | Action | Destination


Getting started:

Go to github and create a new repository. copy the SSH link under code button
to use in terminal. then open terminal and go to directory where you want
to store project. then enter git clone + the copied url 
(dont use the plus sign)
then you can move to that directory and start adding files :)


$ git help <verb>  = Explains what <verb> does

$ git init = Initializes git to make empty repository to track directory
$ rm -rf .git = Removes the Git tracking

$ git status = shows untracked files and files to be commited (staging area)

$ touch .gitignore = creates a git ignore file where you add files
you don't want git to track

$ git add <file> = Add file to staging area (git add -A adds all)
^ Add is used to select which changes you want to commit

$ git reset <file> = Removes file from staging area (no file name removes all)

$ git commit -m "<insert detailed message about changes to code>" 

^ = commits files to repository locally

$ git log = shows commit history
-------------------------------------------------------- Getting from remote
$ git clone <url of remote repository> <where to clone> = copies remote rep

Note: origin is default placeholder name of remote repo,
Master is where final product goes


$ git remote -v = lists information about repository

$ git branch -a = lists all branches in repository (local and remote)

$ git diff = shows changes made to code
------------------------------------------ Push/Pull
$ git pull <master branch> = pulls any changes made by others

$ git push <master branch> = pushes changes you made to remote repository

------------------- Branches

$ git branch <name of branch> = creates a branch to work in
$ git branch = lists all local branches (* marks current branch)
$ git checkout <name of branch> = switches to branch to work in 

Important: Commits made in a local branch need to be pushed to master branch

$ git push -u <remote repository> <local branch> = Links branches and pushes 

$ git branch --merge = shows merged branches
$ git merge <local branch> = merges branches (make sure you checkout master b4)

--------------------------

$ git push <remote repository> --delete <branch name> = deletes branch


